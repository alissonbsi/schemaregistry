/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MasterPolicy extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -351182065521862499L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MasterPolicy\",\"namespace\":\"com.schema.avro\",\"fields\":[{\"name\":\"masterPolicyNumber\",\"type\":\"long\"},{\"name\":\"endorsementNumber\",\"type\":\"int\"},{\"name\":\"effectiveDate\",\"type\":{\"type\":\"int\",\"logicalType\":\"time-millis\"}},{\"name\":\"expirationDate\",\"type\":{\"type\":\"int\",\"logicalType\":\"time-millis\"}},{\"name\":\"partner\",\"type\":{\"type\":\"record\",\"name\":\"Partner\",\"fields\":[{\"name\":\"partnerId\",\"type\":\"long\"},{\"name\":\"partnerName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"masterPolicyDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"fantasyName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"record\",\"name\":\"MasterPolicyStatus\",\"fields\":[{\"name\":\"statusId\",\"type\":\"int\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"Status\",\"symbols\":[\"ATIVO\",\"CANCELADO\",\"NAO_EFETIVADO\",\"EM_NEGOCIACAO\",\"PEND_ATIVACAO\"]}}]}},{\"name\":\"isUniquePremium\",\"type\":\"boolean\",\"default\":true},{\"name\":\"minValue\",\"type\":\"double\"},{\"name\":\"maxValue\",\"type\":\"double\"},{\"name\":\"familyNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"parentNumber\",\"type\":\"long\"},{\"name\":\"broker\",\"type\":{\"type\":\"record\",\"name\":\"Broker\",\"fields\":[{\"name\":\"brokerId\",\"type\":\"long\"},{\"name\":\"brokerName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cmsPercent\",\"type\":\"double\"},{\"name\":\"cmsValue\",\"type\":[\"null\",\"double\"]},{\"name\":\"agent\",\"type\":{\"type\":\"record\",\"name\":\"Agent\",\"fields\":[{\"name\":\"agentId\",\"type\":\"long\"},{\"name\":\"agentName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"agentSocialSec\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cmsPercent\",\"type\":\"double\"},{\"name\":\"cmsValue\",\"type\":[\"null\",\"double\"]}]}}]}},{\"name\":\"risks\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Risk\",\"fields\":[{\"name\":\"RiskId\",\"type\":\"long\"},{\"name\":\"RiskDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"coverages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coverage\",\"fields\":[{\"name\":\"coverageId\",\"type\":\"long\"},{\"name\":\"coverageDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"isBasicRisk\",\"type\":\"boolean\",\"default\":false},{\"name\":\"maxIndemnity\",\"type\":\"float\"},{\"name\":\"plans\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Plan\",\"fields\":[{\"name\":\"planId\",\"type\":\"long\"},{\"name\":\"planDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"valuePremium\",\"type\":[\"null\",\"double\"]},{\"name\":\"factorPremium\",\"type\":[\"null\",\"double\"]}]}}}]}}}]}}},{\"name\":\"product\",\"type\":{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"productId\",\"type\":\"int\"},{\"name\":\"productDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"group\",\"type\":{\"type\":\"record\",\"name\":\"Group\",\"fields\":[{\"name\":\"groupId\",\"type\":\"int\"},{\"name\":\"groupDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lineBusiness\",\"type\":{\"type\":\"record\",\"name\":\"LineBusiness\",\"fields\":[{\"name\":\"lineBusinessId\",\"type\":\"int\"},{\"name\":\"lineBusinessName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimeMillisConversion());
  }

  private static final BinaryMessageEncoder<MasterPolicy> ENCODER =
      new BinaryMessageEncoder<MasterPolicy>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MasterPolicy> DECODER =
      new BinaryMessageDecoder<MasterPolicy>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MasterPolicy> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MasterPolicy> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MasterPolicy> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MasterPolicy>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MasterPolicy to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MasterPolicy from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MasterPolicy instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MasterPolicy fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long masterPolicyNumber;
   private int endorsementNumber;
   private java.time.LocalTime effectiveDate;
   private java.time.LocalTime expirationDate;
   private com.schema.avro.Partner partner;
   private java.lang.String masterPolicyDescription;
   private java.lang.String fantasyName;
   private com.schema.avro.MasterPolicyStatus status;
   private boolean isUniquePremium;
   private double minValue;
   private double maxValue;
   private java.lang.String familyNumber;
   private long parentNumber;
   private com.schema.avro.Broker broker;
   private java.util.List<com.schema.avro.Risk> risks;
   private com.schema.avro.Product product;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MasterPolicy() {}

  /**
   * All-args constructor.
   * @param masterPolicyNumber The new value for masterPolicyNumber
   * @param endorsementNumber The new value for endorsementNumber
   * @param effectiveDate The new value for effectiveDate
   * @param expirationDate The new value for expirationDate
   * @param partner The new value for partner
   * @param masterPolicyDescription The new value for masterPolicyDescription
   * @param fantasyName The new value for fantasyName
   * @param status The new value for status
   * @param isUniquePremium The new value for isUniquePremium
   * @param minValue The new value for minValue
   * @param maxValue The new value for maxValue
   * @param familyNumber The new value for familyNumber
   * @param parentNumber The new value for parentNumber
   * @param broker The new value for broker
   * @param risks The new value for risks
   * @param product The new value for product
   */
  public MasterPolicy(java.lang.Long masterPolicyNumber, java.lang.Integer endorsementNumber, java.time.LocalTime effectiveDate, java.time.LocalTime expirationDate, com.schema.avro.Partner partner, java.lang.String masterPolicyDescription, java.lang.String fantasyName, com.schema.avro.MasterPolicyStatus status, java.lang.Boolean isUniquePremium, java.lang.Double minValue, java.lang.Double maxValue, java.lang.String familyNumber, java.lang.Long parentNumber, com.schema.avro.Broker broker, java.util.List<com.schema.avro.Risk> risks, com.schema.avro.Product product) {
    this.masterPolicyNumber = masterPolicyNumber;
    this.endorsementNumber = endorsementNumber;
    this.effectiveDate = effectiveDate.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.expirationDate = expirationDate.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.partner = partner;
    this.masterPolicyDescription = masterPolicyDescription;
    this.fantasyName = fantasyName;
    this.status = status;
    this.isUniquePremium = isUniquePremium;
    this.minValue = minValue;
    this.maxValue = maxValue;
    this.familyNumber = familyNumber;
    this.parentNumber = parentNumber;
    this.broker = broker;
    this.risks = risks;
    this.product = product;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return masterPolicyNumber;
    case 1: return endorsementNumber;
    case 2: return effectiveDate;
    case 3: return expirationDate;
    case 4: return partner;
    case 5: return masterPolicyDescription;
    case 6: return fantasyName;
    case 7: return status;
    case 8: return isUniquePremium;
    case 9: return minValue;
    case 10: return maxValue;
    case 11: return familyNumber;
    case 12: return parentNumber;
    case 13: return broker;
    case 14: return risks;
    case 15: return product;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimeMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimeMillisConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: masterPolicyNumber = (java.lang.Long)value$; break;
    case 1: endorsementNumber = (java.lang.Integer)value$; break;
    case 2: effectiveDate = (java.time.LocalTime)value$; break;
    case 3: expirationDate = (java.time.LocalTime)value$; break;
    case 4: partner = (com.schema.avro.Partner)value$; break;
    case 5: masterPolicyDescription = value$ != null ? value$.toString() : null; break;
    case 6: fantasyName = value$ != null ? value$.toString() : null; break;
    case 7: status = (com.schema.avro.MasterPolicyStatus)value$; break;
    case 8: isUniquePremium = (java.lang.Boolean)value$; break;
    case 9: minValue = (java.lang.Double)value$; break;
    case 10: maxValue = (java.lang.Double)value$; break;
    case 11: familyNumber = value$ != null ? value$.toString() : null; break;
    case 12: parentNumber = (java.lang.Long)value$; break;
    case 13: broker = (com.schema.avro.Broker)value$; break;
    case 14: risks = (java.util.List<com.schema.avro.Risk>)value$; break;
    case 15: product = (com.schema.avro.Product)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'masterPolicyNumber' field.
   * @return The value of the 'masterPolicyNumber' field.
   */
  public long getMasterPolicyNumber() {
    return masterPolicyNumber;
  }



  /**
   * Gets the value of the 'endorsementNumber' field.
   * @return The value of the 'endorsementNumber' field.
   */
  public int getEndorsementNumber() {
    return endorsementNumber;
  }



  /**
   * Gets the value of the 'effectiveDate' field.
   * @return The value of the 'effectiveDate' field.
   */
  public java.time.LocalTime getEffectiveDate() {
    return effectiveDate;
  }



  /**
   * Gets the value of the 'expirationDate' field.
   * @return The value of the 'expirationDate' field.
   */
  public java.time.LocalTime getExpirationDate() {
    return expirationDate;
  }



  /**
   * Gets the value of the 'partner' field.
   * @return The value of the 'partner' field.
   */
  public com.schema.avro.Partner getPartner() {
    return partner;
  }



  /**
   * Gets the value of the 'masterPolicyDescription' field.
   * @return The value of the 'masterPolicyDescription' field.
   */
  public java.lang.String getMasterPolicyDescription() {
    return masterPolicyDescription;
  }



  /**
   * Gets the value of the 'fantasyName' field.
   * @return The value of the 'fantasyName' field.
   */
  public java.lang.String getFantasyName() {
    return fantasyName;
  }



  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.schema.avro.MasterPolicyStatus getStatus() {
    return status;
  }



  /**
   * Gets the value of the 'isUniquePremium' field.
   * @return The value of the 'isUniquePremium' field.
   */
  public boolean getIsUniquePremium() {
    return isUniquePremium;
  }



  /**
   * Gets the value of the 'minValue' field.
   * @return The value of the 'minValue' field.
   */
  public double getMinValue() {
    return minValue;
  }



  /**
   * Gets the value of the 'maxValue' field.
   * @return The value of the 'maxValue' field.
   */
  public double getMaxValue() {
    return maxValue;
  }



  /**
   * Gets the value of the 'familyNumber' field.
   * @return The value of the 'familyNumber' field.
   */
  public java.lang.String getFamilyNumber() {
    return familyNumber;
  }



  /**
   * Gets the value of the 'parentNumber' field.
   * @return The value of the 'parentNumber' field.
   */
  public long getParentNumber() {
    return parentNumber;
  }



  /**
   * Gets the value of the 'broker' field.
   * @return The value of the 'broker' field.
   */
  public com.schema.avro.Broker getBroker() {
    return broker;
  }



  /**
   * Gets the value of the 'risks' field.
   * @return The value of the 'risks' field.
   */
  public java.util.List<com.schema.avro.Risk> getRisks() {
    return risks;
  }



  /**
   * Gets the value of the 'product' field.
   * @return The value of the 'product' field.
   */
  public com.schema.avro.Product getProduct() {
    return product;
  }



  /**
   * Creates a new MasterPolicy RecordBuilder.
   * @return A new MasterPolicy RecordBuilder
   */
  public static com.schema.avro.MasterPolicy.Builder newBuilder() {
    return new com.schema.avro.MasterPolicy.Builder();
  }

  /**
   * Creates a new MasterPolicy RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MasterPolicy RecordBuilder
   */
  public static com.schema.avro.MasterPolicy.Builder newBuilder(com.schema.avro.MasterPolicy.Builder other) {
    if (other == null) {
      return new com.schema.avro.MasterPolicy.Builder();
    } else {
      return new com.schema.avro.MasterPolicy.Builder(other);
    }
  }

  /**
   * Creates a new MasterPolicy RecordBuilder by copying an existing MasterPolicy instance.
   * @param other The existing instance to copy.
   * @return A new MasterPolicy RecordBuilder
   */
  public static com.schema.avro.MasterPolicy.Builder newBuilder(com.schema.avro.MasterPolicy other) {
    if (other == null) {
      return new com.schema.avro.MasterPolicy.Builder();
    } else {
      return new com.schema.avro.MasterPolicy.Builder(other);
    }
  }

  /**
   * RecordBuilder for MasterPolicy instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MasterPolicy>
    implements org.apache.avro.data.RecordBuilder<MasterPolicy> {

    private long masterPolicyNumber;
    private int endorsementNumber;
    private java.time.LocalTime effectiveDate;
    private java.time.LocalTime expirationDate;
    private com.schema.avro.Partner partner;
    private com.schema.avro.Partner.Builder partnerBuilder;
    private java.lang.String masterPolicyDescription;
    private java.lang.String fantasyName;
    private com.schema.avro.MasterPolicyStatus status;
    private com.schema.avro.MasterPolicyStatus.Builder statusBuilder;
    private boolean isUniquePremium;
    private double minValue;
    private double maxValue;
    private java.lang.String familyNumber;
    private long parentNumber;
    private com.schema.avro.Broker broker;
    private com.schema.avro.Broker.Builder brokerBuilder;
    private java.util.List<com.schema.avro.Risk> risks;
    private com.schema.avro.Product product;
    private com.schema.avro.Product.Builder productBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.schema.avro.MasterPolicy.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.masterPolicyNumber)) {
        this.masterPolicyNumber = data().deepCopy(fields()[0].schema(), other.masterPolicyNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.endorsementNumber)) {
        this.endorsementNumber = data().deepCopy(fields()[1].schema(), other.endorsementNumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[2].schema(), other.effectiveDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.expirationDate)) {
        this.expirationDate = data().deepCopy(fields()[3].schema(), other.expirationDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.partner)) {
        this.partner = data().deepCopy(fields()[4].schema(), other.partner);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasPartnerBuilder()) {
        this.partnerBuilder = com.schema.avro.Partner.newBuilder(other.getPartnerBuilder());
      }
      if (isValidValue(fields()[5], other.masterPolicyDescription)) {
        this.masterPolicyDescription = data().deepCopy(fields()[5].schema(), other.masterPolicyDescription);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.fantasyName)) {
        this.fantasyName = data().deepCopy(fields()[6].schema(), other.fantasyName);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.status)) {
        this.status = data().deepCopy(fields()[7].schema(), other.status);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasStatusBuilder()) {
        this.statusBuilder = com.schema.avro.MasterPolicyStatus.newBuilder(other.getStatusBuilder());
      }
      if (isValidValue(fields()[8], other.isUniquePremium)) {
        this.isUniquePremium = data().deepCopy(fields()[8].schema(), other.isUniquePremium);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.minValue)) {
        this.minValue = data().deepCopy(fields()[9].schema(), other.minValue);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.maxValue)) {
        this.maxValue = data().deepCopy(fields()[10].schema(), other.maxValue);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.familyNumber)) {
        this.familyNumber = data().deepCopy(fields()[11].schema(), other.familyNumber);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.parentNumber)) {
        this.parentNumber = data().deepCopy(fields()[12].schema(), other.parentNumber);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.broker)) {
        this.broker = data().deepCopy(fields()[13].schema(), other.broker);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasBrokerBuilder()) {
        this.brokerBuilder = com.schema.avro.Broker.newBuilder(other.getBrokerBuilder());
      }
      if (isValidValue(fields()[14], other.risks)) {
        this.risks = data().deepCopy(fields()[14].schema(), other.risks);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.product)) {
        this.product = data().deepCopy(fields()[15].schema(), other.product);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (other.hasProductBuilder()) {
        this.productBuilder = com.schema.avro.Product.newBuilder(other.getProductBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MasterPolicy instance
     * @param other The existing instance to copy.
     */
    private Builder(com.schema.avro.MasterPolicy other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.masterPolicyNumber)) {
        this.masterPolicyNumber = data().deepCopy(fields()[0].schema(), other.masterPolicyNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.endorsementNumber)) {
        this.endorsementNumber = data().deepCopy(fields()[1].schema(), other.endorsementNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.effectiveDate)) {
        this.effectiveDate = data().deepCopy(fields()[2].schema(), other.effectiveDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.expirationDate)) {
        this.expirationDate = data().deepCopy(fields()[3].schema(), other.expirationDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.partner)) {
        this.partner = data().deepCopy(fields()[4].schema(), other.partner);
        fieldSetFlags()[4] = true;
      }
      this.partnerBuilder = null;
      if (isValidValue(fields()[5], other.masterPolicyDescription)) {
        this.masterPolicyDescription = data().deepCopy(fields()[5].schema(), other.masterPolicyDescription);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fantasyName)) {
        this.fantasyName = data().deepCopy(fields()[6].schema(), other.fantasyName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.status)) {
        this.status = data().deepCopy(fields()[7].schema(), other.status);
        fieldSetFlags()[7] = true;
      }
      this.statusBuilder = null;
      if (isValidValue(fields()[8], other.isUniquePremium)) {
        this.isUniquePremium = data().deepCopy(fields()[8].schema(), other.isUniquePremium);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.minValue)) {
        this.minValue = data().deepCopy(fields()[9].schema(), other.minValue);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.maxValue)) {
        this.maxValue = data().deepCopy(fields()[10].schema(), other.maxValue);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.familyNumber)) {
        this.familyNumber = data().deepCopy(fields()[11].schema(), other.familyNumber);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.parentNumber)) {
        this.parentNumber = data().deepCopy(fields()[12].schema(), other.parentNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.broker)) {
        this.broker = data().deepCopy(fields()[13].schema(), other.broker);
        fieldSetFlags()[13] = true;
      }
      this.brokerBuilder = null;
      if (isValidValue(fields()[14], other.risks)) {
        this.risks = data().deepCopy(fields()[14].schema(), other.risks);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.product)) {
        this.product = data().deepCopy(fields()[15].schema(), other.product);
        fieldSetFlags()[15] = true;
      }
      this.productBuilder = null;
    }

    /**
      * Gets the value of the 'masterPolicyNumber' field.
      * @return The value.
      */
    public long getMasterPolicyNumber() {
      return masterPolicyNumber;
    }


    /**
      * Sets the value of the 'masterPolicyNumber' field.
      * @param value The value of 'masterPolicyNumber'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setMasterPolicyNumber(long value) {
      validate(fields()[0], value);
      this.masterPolicyNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'masterPolicyNumber' field has been set.
      * @return True if the 'masterPolicyNumber' field has been set, false otherwise.
      */
    public boolean hasMasterPolicyNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'masterPolicyNumber' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearMasterPolicyNumber() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'endorsementNumber' field.
      * @return The value.
      */
    public int getEndorsementNumber() {
      return endorsementNumber;
    }


    /**
      * Sets the value of the 'endorsementNumber' field.
      * @param value The value of 'endorsementNumber'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setEndorsementNumber(int value) {
      validate(fields()[1], value);
      this.endorsementNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'endorsementNumber' field has been set.
      * @return True if the 'endorsementNumber' field has been set, false otherwise.
      */
    public boolean hasEndorsementNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'endorsementNumber' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearEndorsementNumber() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'effectiveDate' field.
      * @return The value.
      */
    public java.time.LocalTime getEffectiveDate() {
      return effectiveDate;
    }


    /**
      * Sets the value of the 'effectiveDate' field.
      * @param value The value of 'effectiveDate'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setEffectiveDate(java.time.LocalTime value) {
      validate(fields()[2], value);
      this.effectiveDate = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'effectiveDate' field has been set.
      * @return True if the 'effectiveDate' field has been set, false otherwise.
      */
    public boolean hasEffectiveDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'effectiveDate' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearEffectiveDate() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'expirationDate' field.
      * @return The value.
      */
    public java.time.LocalTime getExpirationDate() {
      return expirationDate;
    }


    /**
      * Sets the value of the 'expirationDate' field.
      * @param value The value of 'expirationDate'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setExpirationDate(java.time.LocalTime value) {
      validate(fields()[3], value);
      this.expirationDate = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'expirationDate' field has been set.
      * @return True if the 'expirationDate' field has been set, false otherwise.
      */
    public boolean hasExpirationDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'expirationDate' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearExpirationDate() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'partner' field.
      * @return The value.
      */
    public com.schema.avro.Partner getPartner() {
      return partner;
    }


    /**
      * Sets the value of the 'partner' field.
      * @param value The value of 'partner'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setPartner(com.schema.avro.Partner value) {
      validate(fields()[4], value);
      this.partnerBuilder = null;
      this.partner = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'partner' field has been set.
      * @return True if the 'partner' field has been set, false otherwise.
      */
    public boolean hasPartner() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'partner' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.schema.avro.Partner.Builder getPartnerBuilder() {
      if (partnerBuilder == null) {
        if (hasPartner()) {
          setPartnerBuilder(com.schema.avro.Partner.newBuilder(partner));
        } else {
          setPartnerBuilder(com.schema.avro.Partner.newBuilder());
        }
      }
      return partnerBuilder;
    }

    /**
     * Sets the Builder instance for the 'partner' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.schema.avro.MasterPolicy.Builder setPartnerBuilder(com.schema.avro.Partner.Builder value) {
      clearPartner();
      partnerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'partner' field has an active Builder instance
     * @return True if the 'partner' field has an active Builder instance
     */
    public boolean hasPartnerBuilder() {
      return partnerBuilder != null;
    }

    /**
      * Clears the value of the 'partner' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearPartner() {
      partner = null;
      partnerBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'masterPolicyDescription' field.
      * @return The value.
      */
    public java.lang.String getMasterPolicyDescription() {
      return masterPolicyDescription;
    }


    /**
      * Sets the value of the 'masterPolicyDescription' field.
      * @param value The value of 'masterPolicyDescription'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setMasterPolicyDescription(java.lang.String value) {
      validate(fields()[5], value);
      this.masterPolicyDescription = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'masterPolicyDescription' field has been set.
      * @return True if the 'masterPolicyDescription' field has been set, false otherwise.
      */
    public boolean hasMasterPolicyDescription() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'masterPolicyDescription' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearMasterPolicyDescription() {
      masterPolicyDescription = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'fantasyName' field.
      * @return The value.
      */
    public java.lang.String getFantasyName() {
      return fantasyName;
    }


    /**
      * Sets the value of the 'fantasyName' field.
      * @param value The value of 'fantasyName'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setFantasyName(java.lang.String value) {
      validate(fields()[6], value);
      this.fantasyName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'fantasyName' field has been set.
      * @return True if the 'fantasyName' field has been set, false otherwise.
      */
    public boolean hasFantasyName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'fantasyName' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearFantasyName() {
      fantasyName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.schema.avro.MasterPolicyStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setStatus(com.schema.avro.MasterPolicyStatus value) {
      validate(fields()[7], value);
      this.statusBuilder = null;
      this.status = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'status' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.schema.avro.MasterPolicyStatus.Builder getStatusBuilder() {
      if (statusBuilder == null) {
        if (hasStatus()) {
          setStatusBuilder(com.schema.avro.MasterPolicyStatus.newBuilder(status));
        } else {
          setStatusBuilder(com.schema.avro.MasterPolicyStatus.newBuilder());
        }
      }
      return statusBuilder;
    }

    /**
     * Sets the Builder instance for the 'status' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.schema.avro.MasterPolicy.Builder setStatusBuilder(com.schema.avro.MasterPolicyStatus.Builder value) {
      clearStatus();
      statusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'status' field has an active Builder instance
     * @return True if the 'status' field has an active Builder instance
     */
    public boolean hasStatusBuilder() {
      return statusBuilder != null;
    }

    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearStatus() {
      status = null;
      statusBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'isUniquePremium' field.
      * @return The value.
      */
    public boolean getIsUniquePremium() {
      return isUniquePremium;
    }


    /**
      * Sets the value of the 'isUniquePremium' field.
      * @param value The value of 'isUniquePremium'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setIsUniquePremium(boolean value) {
      validate(fields()[8], value);
      this.isUniquePremium = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'isUniquePremium' field has been set.
      * @return True if the 'isUniquePremium' field has been set, false otherwise.
      */
    public boolean hasIsUniquePremium() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'isUniquePremium' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearIsUniquePremium() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'minValue' field.
      * @return The value.
      */
    public double getMinValue() {
      return minValue;
    }


    /**
      * Sets the value of the 'minValue' field.
      * @param value The value of 'minValue'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setMinValue(double value) {
      validate(fields()[9], value);
      this.minValue = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'minValue' field has been set.
      * @return True if the 'minValue' field has been set, false otherwise.
      */
    public boolean hasMinValue() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'minValue' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearMinValue() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxValue' field.
      * @return The value.
      */
    public double getMaxValue() {
      return maxValue;
    }


    /**
      * Sets the value of the 'maxValue' field.
      * @param value The value of 'maxValue'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setMaxValue(double value) {
      validate(fields()[10], value);
      this.maxValue = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'maxValue' field has been set.
      * @return True if the 'maxValue' field has been set, false otherwise.
      */
    public boolean hasMaxValue() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'maxValue' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearMaxValue() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'familyNumber' field.
      * @return The value.
      */
    public java.lang.String getFamilyNumber() {
      return familyNumber;
    }


    /**
      * Sets the value of the 'familyNumber' field.
      * @param value The value of 'familyNumber'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setFamilyNumber(java.lang.String value) {
      validate(fields()[11], value);
      this.familyNumber = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'familyNumber' field has been set.
      * @return True if the 'familyNumber' field has been set, false otherwise.
      */
    public boolean hasFamilyNumber() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'familyNumber' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearFamilyNumber() {
      familyNumber = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentNumber' field.
      * @return The value.
      */
    public long getParentNumber() {
      return parentNumber;
    }


    /**
      * Sets the value of the 'parentNumber' field.
      * @param value The value of 'parentNumber'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setParentNumber(long value) {
      validate(fields()[12], value);
      this.parentNumber = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'parentNumber' field has been set.
      * @return True if the 'parentNumber' field has been set, false otherwise.
      */
    public boolean hasParentNumber() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'parentNumber' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearParentNumber() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'broker' field.
      * @return The value.
      */
    public com.schema.avro.Broker getBroker() {
      return broker;
    }


    /**
      * Sets the value of the 'broker' field.
      * @param value The value of 'broker'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setBroker(com.schema.avro.Broker value) {
      validate(fields()[13], value);
      this.brokerBuilder = null;
      this.broker = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'broker' field has been set.
      * @return True if the 'broker' field has been set, false otherwise.
      */
    public boolean hasBroker() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'broker' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.schema.avro.Broker.Builder getBrokerBuilder() {
      if (brokerBuilder == null) {
        if (hasBroker()) {
          setBrokerBuilder(com.schema.avro.Broker.newBuilder(broker));
        } else {
          setBrokerBuilder(com.schema.avro.Broker.newBuilder());
        }
      }
      return brokerBuilder;
    }

    /**
     * Sets the Builder instance for the 'broker' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.schema.avro.MasterPolicy.Builder setBrokerBuilder(com.schema.avro.Broker.Builder value) {
      clearBroker();
      brokerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'broker' field has an active Builder instance
     * @return True if the 'broker' field has an active Builder instance
     */
    public boolean hasBrokerBuilder() {
      return brokerBuilder != null;
    }

    /**
      * Clears the value of the 'broker' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearBroker() {
      broker = null;
      brokerBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'risks' field.
      * @return The value.
      */
    public java.util.List<com.schema.avro.Risk> getRisks() {
      return risks;
    }


    /**
      * Sets the value of the 'risks' field.
      * @param value The value of 'risks'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setRisks(java.util.List<com.schema.avro.Risk> value) {
      validate(fields()[14], value);
      this.risks = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'risks' field has been set.
      * @return True if the 'risks' field has been set, false otherwise.
      */
    public boolean hasRisks() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'risks' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearRisks() {
      risks = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'product' field.
      * @return The value.
      */
    public com.schema.avro.Product getProduct() {
      return product;
    }


    /**
      * Sets the value of the 'product' field.
      * @param value The value of 'product'.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder setProduct(com.schema.avro.Product value) {
      validate(fields()[15], value);
      this.productBuilder = null;
      this.product = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'product' field has been set.
      * @return True if the 'product' field has been set, false otherwise.
      */
    public boolean hasProduct() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'product' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.schema.avro.Product.Builder getProductBuilder() {
      if (productBuilder == null) {
        if (hasProduct()) {
          setProductBuilder(com.schema.avro.Product.newBuilder(product));
        } else {
          setProductBuilder(com.schema.avro.Product.newBuilder());
        }
      }
      return productBuilder;
    }

    /**
     * Sets the Builder instance for the 'product' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.schema.avro.MasterPolicy.Builder setProductBuilder(com.schema.avro.Product.Builder value) {
      clearProduct();
      productBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'product' field has an active Builder instance
     * @return True if the 'product' field has an active Builder instance
     */
    public boolean hasProductBuilder() {
      return productBuilder != null;
    }

    /**
      * Clears the value of the 'product' field.
      * @return This builder.
      */
    public com.schema.avro.MasterPolicy.Builder clearProduct() {
      product = null;
      productBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MasterPolicy build() {
      try {
        MasterPolicy record = new MasterPolicy();
        record.masterPolicyNumber = fieldSetFlags()[0] ? this.masterPolicyNumber : (java.lang.Long) defaultValue(fields()[0]);
        record.endorsementNumber = fieldSetFlags()[1] ? this.endorsementNumber : (java.lang.Integer) defaultValue(fields()[1]);
        record.effectiveDate = fieldSetFlags()[2] ? this.effectiveDate : (java.time.LocalTime) defaultValue(fields()[2]);
        record.expirationDate = fieldSetFlags()[3] ? this.expirationDate : (java.time.LocalTime) defaultValue(fields()[3]);
        if (partnerBuilder != null) {
          try {
            record.partner = this.partnerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("partner"));
            throw e;
          }
        } else {
          record.partner = fieldSetFlags()[4] ? this.partner : (com.schema.avro.Partner) defaultValue(fields()[4]);
        }
        record.masterPolicyDescription = fieldSetFlags()[5] ? this.masterPolicyDescription : (java.lang.String) defaultValue(fields()[5]);
        record.fantasyName = fieldSetFlags()[6] ? this.fantasyName : (java.lang.String) defaultValue(fields()[6]);
        if (statusBuilder != null) {
          try {
            record.status = this.statusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("status"));
            throw e;
          }
        } else {
          record.status = fieldSetFlags()[7] ? this.status : (com.schema.avro.MasterPolicyStatus) defaultValue(fields()[7]);
        }
        record.isUniquePremium = fieldSetFlags()[8] ? this.isUniquePremium : (java.lang.Boolean) defaultValue(fields()[8]);
        record.minValue = fieldSetFlags()[9] ? this.minValue : (java.lang.Double) defaultValue(fields()[9]);
        record.maxValue = fieldSetFlags()[10] ? this.maxValue : (java.lang.Double) defaultValue(fields()[10]);
        record.familyNumber = fieldSetFlags()[11] ? this.familyNumber : (java.lang.String) defaultValue(fields()[11]);
        record.parentNumber = fieldSetFlags()[12] ? this.parentNumber : (java.lang.Long) defaultValue(fields()[12]);
        if (brokerBuilder != null) {
          try {
            record.broker = this.brokerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("broker"));
            throw e;
          }
        } else {
          record.broker = fieldSetFlags()[13] ? this.broker : (com.schema.avro.Broker) defaultValue(fields()[13]);
        }
        record.risks = fieldSetFlags()[14] ? this.risks : (java.util.List<com.schema.avro.Risk>) defaultValue(fields()[14]);
        if (productBuilder != null) {
          try {
            record.product = this.productBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("product"));
            throw e;
          }
        } else {
          record.product = fieldSetFlags()[15] ? this.product : (com.schema.avro.Product) defaultValue(fields()[15]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MasterPolicy>
    WRITER$ = (org.apache.avro.io.DatumWriter<MasterPolicy>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MasterPolicy>
    READER$ = (org.apache.avro.io.DatumReader<MasterPolicy>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










