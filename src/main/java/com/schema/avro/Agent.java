/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.schema.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Agent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5001552845198173166L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Agent\",\"namespace\":\"com.schema.avro\",\"fields\":[{\"name\":\"agentId\",\"type\":\"long\"},{\"name\":\"agentName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"agentSocialSec\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cmsPercent\",\"type\":\"double\"},{\"name\":\"cmsValue\",\"type\":[\"null\",\"double\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Agent> ENCODER =
      new BinaryMessageEncoder<Agent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Agent> DECODER =
      new BinaryMessageDecoder<Agent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Agent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Agent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Agent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Agent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Agent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Agent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Agent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Agent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long agentId;
   private java.lang.String agentName;
   private java.lang.String agentSocialSec;
   private double cmsPercent;
   private java.lang.Double cmsValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Agent() {}

  /**
   * All-args constructor.
   * @param agentId The new value for agentId
   * @param agentName The new value for agentName
   * @param agentSocialSec The new value for agentSocialSec
   * @param cmsPercent The new value for cmsPercent
   * @param cmsValue The new value for cmsValue
   */
  public Agent(java.lang.Long agentId, java.lang.String agentName, java.lang.String agentSocialSec, java.lang.Double cmsPercent, java.lang.Double cmsValue) {
    this.agentId = agentId;
    this.agentName = agentName;
    this.agentSocialSec = agentSocialSec;
    this.cmsPercent = cmsPercent;
    this.cmsValue = cmsValue;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return agentId;
    case 1: return agentName;
    case 2: return agentSocialSec;
    case 3: return cmsPercent;
    case 4: return cmsValue;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: agentId = (java.lang.Long)value$; break;
    case 1: agentName = value$ != null ? value$.toString() : null; break;
    case 2: agentSocialSec = value$ != null ? value$.toString() : null; break;
    case 3: cmsPercent = (java.lang.Double)value$; break;
    case 4: cmsValue = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'agentId' field.
   * @return The value of the 'agentId' field.
   */
  public long getAgentId() {
    return agentId;
  }



  /**
   * Gets the value of the 'agentName' field.
   * @return The value of the 'agentName' field.
   */
  public java.lang.String getAgentName() {
    return agentName;
  }



  /**
   * Gets the value of the 'agentSocialSec' field.
   * @return The value of the 'agentSocialSec' field.
   */
  public java.lang.String getAgentSocialSec() {
    return agentSocialSec;
  }



  /**
   * Gets the value of the 'cmsPercent' field.
   * @return The value of the 'cmsPercent' field.
   */
  public double getCmsPercent() {
    return cmsPercent;
  }



  /**
   * Gets the value of the 'cmsValue' field.
   * @return The value of the 'cmsValue' field.
   */
  public java.lang.Double getCmsValue() {
    return cmsValue;
  }



  /**
   * Creates a new Agent RecordBuilder.
   * @return A new Agent RecordBuilder
   */
  public static com.schema.avro.Agent.Builder newBuilder() {
    return new com.schema.avro.Agent.Builder();
  }

  /**
   * Creates a new Agent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Agent RecordBuilder
   */
  public static com.schema.avro.Agent.Builder newBuilder(com.schema.avro.Agent.Builder other) {
    if (other == null) {
      return new com.schema.avro.Agent.Builder();
    } else {
      return new com.schema.avro.Agent.Builder(other);
    }
  }

  /**
   * Creates a new Agent RecordBuilder by copying an existing Agent instance.
   * @param other The existing instance to copy.
   * @return A new Agent RecordBuilder
   */
  public static com.schema.avro.Agent.Builder newBuilder(com.schema.avro.Agent other) {
    if (other == null) {
      return new com.schema.avro.Agent.Builder();
    } else {
      return new com.schema.avro.Agent.Builder(other);
    }
  }

  /**
   * RecordBuilder for Agent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Agent>
    implements org.apache.avro.data.RecordBuilder<Agent> {

    private long agentId;
    private java.lang.String agentName;
    private java.lang.String agentSocialSec;
    private double cmsPercent;
    private java.lang.Double cmsValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.schema.avro.Agent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.agentId)) {
        this.agentId = data().deepCopy(fields()[0].schema(), other.agentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.agentName)) {
        this.agentName = data().deepCopy(fields()[1].schema(), other.agentName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.agentSocialSec)) {
        this.agentSocialSec = data().deepCopy(fields()[2].schema(), other.agentSocialSec);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.cmsPercent)) {
        this.cmsPercent = data().deepCopy(fields()[3].schema(), other.cmsPercent);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.cmsValue)) {
        this.cmsValue = data().deepCopy(fields()[4].schema(), other.cmsValue);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Agent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.schema.avro.Agent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.agentId)) {
        this.agentId = data().deepCopy(fields()[0].schema(), other.agentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agentName)) {
        this.agentName = data().deepCopy(fields()[1].schema(), other.agentName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.agentSocialSec)) {
        this.agentSocialSec = data().deepCopy(fields()[2].schema(), other.agentSocialSec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cmsPercent)) {
        this.cmsPercent = data().deepCopy(fields()[3].schema(), other.cmsPercent);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cmsValue)) {
        this.cmsValue = data().deepCopy(fields()[4].schema(), other.cmsValue);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'agentId' field.
      * @return The value.
      */
    public long getAgentId() {
      return agentId;
    }


    /**
      * Sets the value of the 'agentId' field.
      * @param value The value of 'agentId'.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder setAgentId(long value) {
      validate(fields()[0], value);
      this.agentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'agentId' field has been set.
      * @return True if the 'agentId' field has been set, false otherwise.
      */
    public boolean hasAgentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'agentId' field.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder clearAgentId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentName' field.
      * @return The value.
      */
    public java.lang.String getAgentName() {
      return agentName;
    }


    /**
      * Sets the value of the 'agentName' field.
      * @param value The value of 'agentName'.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder setAgentName(java.lang.String value) {
      validate(fields()[1], value);
      this.agentName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'agentName' field has been set.
      * @return True if the 'agentName' field has been set, false otherwise.
      */
    public boolean hasAgentName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'agentName' field.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder clearAgentName() {
      agentName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentSocialSec' field.
      * @return The value.
      */
    public java.lang.String getAgentSocialSec() {
      return agentSocialSec;
    }


    /**
      * Sets the value of the 'agentSocialSec' field.
      * @param value The value of 'agentSocialSec'.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder setAgentSocialSec(java.lang.String value) {
      validate(fields()[2], value);
      this.agentSocialSec = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'agentSocialSec' field has been set.
      * @return True if the 'agentSocialSec' field has been set, false otherwise.
      */
    public boolean hasAgentSocialSec() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'agentSocialSec' field.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder clearAgentSocialSec() {
      agentSocialSec = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'cmsPercent' field.
      * @return The value.
      */
    public double getCmsPercent() {
      return cmsPercent;
    }


    /**
      * Sets the value of the 'cmsPercent' field.
      * @param value The value of 'cmsPercent'.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder setCmsPercent(double value) {
      validate(fields()[3], value);
      this.cmsPercent = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'cmsPercent' field has been set.
      * @return True if the 'cmsPercent' field has been set, false otherwise.
      */
    public boolean hasCmsPercent() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'cmsPercent' field.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder clearCmsPercent() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'cmsValue' field.
      * @return The value.
      */
    public java.lang.Double getCmsValue() {
      return cmsValue;
    }


    /**
      * Sets the value of the 'cmsValue' field.
      * @param value The value of 'cmsValue'.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder setCmsValue(java.lang.Double value) {
      validate(fields()[4], value);
      this.cmsValue = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'cmsValue' field has been set.
      * @return True if the 'cmsValue' field has been set, false otherwise.
      */
    public boolean hasCmsValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'cmsValue' field.
      * @return This builder.
      */
    public com.schema.avro.Agent.Builder clearCmsValue() {
      cmsValue = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Agent build() {
      try {
        Agent record = new Agent();
        record.agentId = fieldSetFlags()[0] ? this.agentId : (java.lang.Long) defaultValue(fields()[0]);
        record.agentName = fieldSetFlags()[1] ? this.agentName : (java.lang.String) defaultValue(fields()[1]);
        record.agentSocialSec = fieldSetFlags()[2] ? this.agentSocialSec : (java.lang.String) defaultValue(fields()[2]);
        record.cmsPercent = fieldSetFlags()[3] ? this.cmsPercent : (java.lang.Double) defaultValue(fields()[3]);
        record.cmsValue = fieldSetFlags()[4] ? this.cmsValue : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Agent>
    WRITER$ = (org.apache.avro.io.DatumWriter<Agent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Agent>
    READER$ = (org.apache.avro.io.DatumReader<Agent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.agentId);

    out.writeString(this.agentName);

    out.writeString(this.agentSocialSec);

    out.writeDouble(this.cmsPercent);

    if (this.cmsValue == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.cmsValue);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.agentId = in.readLong();

      this.agentName = in.readString();

      this.agentSocialSec = in.readString();

      this.cmsPercent = in.readDouble();

      if (in.readIndex() != 1) {
        in.readNull();
        this.cmsValue = null;
      } else {
        this.cmsValue = in.readDouble();
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.agentId = in.readLong();
          break;

        case 1:
          this.agentName = in.readString();
          break;

        case 2:
          this.agentSocialSec = in.readString();
          break;

        case 3:
          this.cmsPercent = in.readDouble();
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.cmsValue = null;
          } else {
            this.cmsValue = in.readDouble();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










