/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.cardif.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Broker extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4227612460731849241L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Broker\",\"namespace\":\"com.cardif.avro\",\"fields\":[{\"name\":\"brokerId\",\"type\":\"long\"},{\"name\":\"brokerName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cmsPercent\",\"type\":\"double\"},{\"name\":\"cmsValue\",\"type\":[\"null\",\"double\"]},{\"name\":\"agent\",\"type\":{\"type\":\"record\",\"name\":\"Agent\",\"fields\":[{\"name\":\"agentId\",\"type\":\"long\"},{\"name\":\"agentName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"agentSocialSec\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cmsPercent\",\"type\":\"double\"},{\"name\":\"cmsValue\",\"type\":[\"null\",\"double\"]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Broker> ENCODER =
      new BinaryMessageEncoder<Broker>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Broker> DECODER =
      new BinaryMessageDecoder<Broker>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Broker> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Broker> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Broker> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Broker>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Broker to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Broker from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Broker instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Broker fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long brokerId;
   private java.lang.String brokerName;
   private double cmsPercent;
   private java.lang.Double cmsValue;
   private com.cardif.avro.Agent agent;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Broker() {}

  /**
   * All-args constructor.
   * @param brokerId The new value for brokerId
   * @param brokerName The new value for brokerName
   * @param cmsPercent The new value for cmsPercent
   * @param cmsValue The new value for cmsValue
   * @param agent The new value for agent
   */
  public Broker(java.lang.Long brokerId, java.lang.String brokerName, java.lang.Double cmsPercent, java.lang.Double cmsValue, com.cardif.avro.Agent agent) {
    this.brokerId = brokerId;
    this.brokerName = brokerName;
    this.cmsPercent = cmsPercent;
    this.cmsValue = cmsValue;
    this.agent = agent;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return brokerId;
    case 1: return brokerName;
    case 2: return cmsPercent;
    case 3: return cmsValue;
    case 4: return agent;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: brokerId = (java.lang.Long)value$; break;
    case 1: brokerName = value$ != null ? value$.toString() : null; break;
    case 2: cmsPercent = (java.lang.Double)value$; break;
    case 3: cmsValue = (java.lang.Double)value$; break;
    case 4: agent = (com.cardif.avro.Agent)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'brokerId' field.
   * @return The value of the 'brokerId' field.
   */
  public long getBrokerId() {
    return brokerId;
  }



  /**
   * Gets the value of the 'brokerName' field.
   * @return The value of the 'brokerName' field.
   */
  public java.lang.String getBrokerName() {
    return brokerName;
  }



  /**
   * Gets the value of the 'cmsPercent' field.
   * @return The value of the 'cmsPercent' field.
   */
  public double getCmsPercent() {
    return cmsPercent;
  }



  /**
   * Gets the value of the 'cmsValue' field.
   * @return The value of the 'cmsValue' field.
   */
  public java.lang.Double getCmsValue() {
    return cmsValue;
  }



  /**
   * Gets the value of the 'agent' field.
   * @return The value of the 'agent' field.
   */
  public com.cardif.avro.Agent getAgent() {
    return agent;
  }



  /**
   * Creates a new Broker RecordBuilder.
   * @return A new Broker RecordBuilder
   */
  public static com.cardif.avro.Broker.Builder newBuilder() {
    return new com.cardif.avro.Broker.Builder();
  }

  /**
   * Creates a new Broker RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Broker RecordBuilder
   */
  public static com.cardif.avro.Broker.Builder newBuilder(com.cardif.avro.Broker.Builder other) {
    if (other == null) {
      return new com.cardif.avro.Broker.Builder();
    } else {
      return new com.cardif.avro.Broker.Builder(other);
    }
  }

  /**
   * Creates a new Broker RecordBuilder by copying an existing Broker instance.
   * @param other The existing instance to copy.
   * @return A new Broker RecordBuilder
   */
  public static com.cardif.avro.Broker.Builder newBuilder(com.cardif.avro.Broker other) {
    if (other == null) {
      return new com.cardif.avro.Broker.Builder();
    } else {
      return new com.cardif.avro.Broker.Builder(other);
    }
  }

  /**
   * RecordBuilder for Broker instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Broker>
    implements org.apache.avro.data.RecordBuilder<Broker> {

    private long brokerId;
    private java.lang.String brokerName;
    private double cmsPercent;
    private java.lang.Double cmsValue;
    private com.cardif.avro.Agent agent;
    private com.cardif.avro.Agent.Builder agentBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.cardif.avro.Broker.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[0].schema(), other.brokerId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.brokerName)) {
        this.brokerName = data().deepCopy(fields()[1].schema(), other.brokerName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.cmsPercent)) {
        this.cmsPercent = data().deepCopy(fields()[2].schema(), other.cmsPercent);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.cmsValue)) {
        this.cmsValue = data().deepCopy(fields()[3].schema(), other.cmsValue);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.agent)) {
        this.agent = data().deepCopy(fields()[4].schema(), other.agent);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasAgentBuilder()) {
        this.agentBuilder = com.cardif.avro.Agent.newBuilder(other.getAgentBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Broker instance
     * @param other The existing instance to copy.
     */
    private Builder(com.cardif.avro.Broker other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[0].schema(), other.brokerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.brokerName)) {
        this.brokerName = data().deepCopy(fields()[1].schema(), other.brokerName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cmsPercent)) {
        this.cmsPercent = data().deepCopy(fields()[2].schema(), other.cmsPercent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cmsValue)) {
        this.cmsValue = data().deepCopy(fields()[3].schema(), other.cmsValue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.agent)) {
        this.agent = data().deepCopy(fields()[4].schema(), other.agent);
        fieldSetFlags()[4] = true;
      }
      this.agentBuilder = null;
    }

    /**
      * Gets the value of the 'brokerId' field.
      * @return The value.
      */
    public long getBrokerId() {
      return brokerId;
    }


    /**
      * Sets the value of the 'brokerId' field.
      * @param value The value of 'brokerId'.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder setBrokerId(long value) {
      validate(fields()[0], value);
      this.brokerId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'brokerId' field has been set.
      * @return True if the 'brokerId' field has been set, false otherwise.
      */
    public boolean hasBrokerId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'brokerId' field.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder clearBrokerId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'brokerName' field.
      * @return The value.
      */
    public java.lang.String getBrokerName() {
      return brokerName;
    }


    /**
      * Sets the value of the 'brokerName' field.
      * @param value The value of 'brokerName'.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder setBrokerName(java.lang.String value) {
      validate(fields()[1], value);
      this.brokerName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'brokerName' field has been set.
      * @return True if the 'brokerName' field has been set, false otherwise.
      */
    public boolean hasBrokerName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'brokerName' field.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder clearBrokerName() {
      brokerName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'cmsPercent' field.
      * @return The value.
      */
    public double getCmsPercent() {
      return cmsPercent;
    }


    /**
      * Sets the value of the 'cmsPercent' field.
      * @param value The value of 'cmsPercent'.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder setCmsPercent(double value) {
      validate(fields()[2], value);
      this.cmsPercent = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'cmsPercent' field has been set.
      * @return True if the 'cmsPercent' field has been set, false otherwise.
      */
    public boolean hasCmsPercent() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'cmsPercent' field.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder clearCmsPercent() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'cmsValue' field.
      * @return The value.
      */
    public java.lang.Double getCmsValue() {
      return cmsValue;
    }


    /**
      * Sets the value of the 'cmsValue' field.
      * @param value The value of 'cmsValue'.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder setCmsValue(java.lang.Double value) {
      validate(fields()[3], value);
      this.cmsValue = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'cmsValue' field has been set.
      * @return True if the 'cmsValue' field has been set, false otherwise.
      */
    public boolean hasCmsValue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'cmsValue' field.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder clearCmsValue() {
      cmsValue = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'agent' field.
      * @return The value.
      */
    public com.cardif.avro.Agent getAgent() {
      return agent;
    }


    /**
      * Sets the value of the 'agent' field.
      * @param value The value of 'agent'.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder setAgent(com.cardif.avro.Agent value) {
      validate(fields()[4], value);
      this.agentBuilder = null;
      this.agent = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'agent' field has been set.
      * @return True if the 'agent' field has been set, false otherwise.
      */
    public boolean hasAgent() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'agent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.cardif.avro.Agent.Builder getAgentBuilder() {
      if (agentBuilder == null) {
        if (hasAgent()) {
          setAgentBuilder(com.cardif.avro.Agent.newBuilder(agent));
        } else {
          setAgentBuilder(com.cardif.avro.Agent.newBuilder());
        }
      }
      return agentBuilder;
    }

    /**
     * Sets the Builder instance for the 'agent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.cardif.avro.Broker.Builder setAgentBuilder(com.cardif.avro.Agent.Builder value) {
      clearAgent();
      agentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'agent' field has an active Builder instance
     * @return True if the 'agent' field has an active Builder instance
     */
    public boolean hasAgentBuilder() {
      return agentBuilder != null;
    }

    /**
      * Clears the value of the 'agent' field.
      * @return This builder.
      */
    public com.cardif.avro.Broker.Builder clearAgent() {
      agent = null;
      agentBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Broker build() {
      try {
        Broker record = new Broker();
        record.brokerId = fieldSetFlags()[0] ? this.brokerId : (java.lang.Long) defaultValue(fields()[0]);
        record.brokerName = fieldSetFlags()[1] ? this.brokerName : (java.lang.String) defaultValue(fields()[1]);
        record.cmsPercent = fieldSetFlags()[2] ? this.cmsPercent : (java.lang.Double) defaultValue(fields()[2]);
        record.cmsValue = fieldSetFlags()[3] ? this.cmsValue : (java.lang.Double) defaultValue(fields()[3]);
        if (agentBuilder != null) {
          try {
            record.agent = this.agentBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("agent"));
            throw e;
          }
        } else {
          record.agent = fieldSetFlags()[4] ? this.agent : (com.cardif.avro.Agent) defaultValue(fields()[4]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Broker>
    WRITER$ = (org.apache.avro.io.DatumWriter<Broker>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Broker>
    READER$ = (org.apache.avro.io.DatumReader<Broker>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.brokerId);

    out.writeString(this.brokerName);

    out.writeDouble(this.cmsPercent);

    if (this.cmsValue == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.cmsValue);
    }

    this.agent.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.brokerId = in.readLong();

      this.brokerName = in.readString();

      this.cmsPercent = in.readDouble();

      if (in.readIndex() != 1) {
        in.readNull();
        this.cmsValue = null;
      } else {
        this.cmsValue = in.readDouble();
      }

      if (this.agent == null) {
        this.agent = new com.cardif.avro.Agent();
      }
      this.agent.customDecode(in);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.brokerId = in.readLong();
          break;

        case 1:
          this.brokerName = in.readString();
          break;

        case 2:
          this.cmsPercent = in.readDouble();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.cmsValue = null;
          } else {
            this.cmsValue = in.readDouble();
          }
          break;

        case 4:
          if (this.agent == null) {
            this.agent = new com.cardif.avro.Agent();
          }
          this.agent.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










